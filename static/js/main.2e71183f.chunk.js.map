{"version":3,"sources":["pages/HomePage.tsx","utils/constants.tsx","types/Gender.ts","components/PeopleFilters/PeopleFilters.tsx","components/Loader/Loader.tsx","types/SortBy.ts","components/PeopleSort/PeopleSort.tsx","components/PersonLink/PersonLink.tsx","components/BodyTable/BodyTable.tsx","components/PeopleTable/PeopleTable.tsx","types/SortOrder.ts","helper.tsx","pages/PeoplePage.tsx","services/people.ts","components/NavBar/NavBar.tsx","App.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["HomePage","className","centurySet","Gender","PeopleFilters","query","centuries","useSearchParams","searchParams","setSearchParams","selectedGender","get","All","addCenturyToUrlParams","cen","params","URLSearchParams","newCenturies","includes","filter","century","delete","forEach","append","addGenderToUrlParams","gender","peopleGenders","Object","entries","map","key","value","classNames","to","pathname","search","toString","type","placeholder","onChange","event","set","target","constants","currentCentury","Date","now","length","clearCenturies","Loader","SortBy","PeopleSort","oldSort","oldOrder","setIconClass","columnName","addSortToUrlParams","sort","Name","Sex","Born","Died","PersonLink","person","slug","sex","name","BodyTable","selectedSlug","born","died","mother","motherName","father","fatherName","PeopleTable","people","SortOrder","findParent","peopleList","parentName","find","hasNormalizedQuery","content","normalizedQuery","trim","toLowerCase","filterPeopleByQuery","filterByGender","Math","floor","filterByCentury","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMassage","setErrorMassage","useParams","isShowTable","isPeople","useEffect","setTimeout","fetch","then","response","json","getPeopleWithParents","catch","finally","getAll","sortedPeople","humanA","humanB","Desc","localeCompare","sortPeople","values","g","getLinkClass","isActive","NavBar","role","App","NotFoundPage","Root","path","element","replace","index","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.2e71183f.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const centurySet: string[] = ['16', '17', '18', '19', '20'];\n\nexport const FEMALE = 'f';\n","export enum Gender {\n  All = 'all',\n  Male = 'm',\n  Female = 'f',\n}\n","import { useSearchParams, Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport * as constants from '../../utils/constants';\nimport { Gender } from '../../types/Gender';\n\ntype Props = {\n  query: string | null,\n  centuries: string[] | undefined,\n};\n\nexport const PeopleFilters: React.FC<Props> = ({\n  query,\n  centuries,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const selectedGender: string = searchParams.get('sex') ?? Gender.All;\n\n  const addCenturyToUrlParams = (cen: string): URLSearchParams => {\n    const params = new URLSearchParams(searchParams);\n\n    const newCenturies = centuries?.includes(cen)\n      ? centuries.filter(century => century !== cen)\n      : [...(centuries ?? []), cen];\n\n    params.delete('centuries');\n    newCenturies.forEach(century => params.append('centuries', century));\n\n    return params;\n  };\n\n  const addGenderToUrlParams = (gender: string): URLSearchParams => {\n    const params = new URLSearchParams(searchParams);\n\n    params.delete('sex');\n    if (gender !== 'all') {\n      params.append('sex', gender);\n    }\n\n    return params;\n  };\n\n  function clearCenturies():URLSearchParams {\n    const params = new URLSearchParams(searchParams);\n\n    params.delete('centuries');\n\n    return params;\n  }\n\n  const onChangeSetQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = new URLSearchParams(searchParams);\n\n    params.set('query', event.target.value);\n    setSearchParams(params);\n  };\n\n  const peopleGenders = Object.entries(Gender);\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {peopleGenders.map(([key, value]) => (\n          <Link\n            className={classNames({ 'is-active': value !== selectedGender })}\n            to={{\n              pathname: '',\n              search: addGenderToUrlParams(value).toString(),\n            }}\n            key={key}\n          >\n            {key}\n          </Link>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query ?? ''}\n            onChange={onChangeSetQuery}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {constants.centurySet.map(currentCentury => (\n              <Link\n                key={`${Date.now()}_${currentCentury}`}\n                data-cy=\"century\"\n                className={classNames('button', 'mr-1', {\n                  'is-info': centuries?.includes(currentCentury),\n                })}\n                to={{\n                  pathname: '',\n                  search: addCenturyToUrlParams(currentCentury).toString(),\n                }}\n              >\n                {currentCentury}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={classNames('button', 'is-success',\n                { 'is-outlined': centuries?.length })}\n              to={{\n                pathname: '',\n                search: clearCenturies().toString(),\n              }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className={classNames('button', 'is-link', 'is-outlined',\n            { 'is-fullwidth': searchParams })}\n          to=\"#/people\"\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export enum SortBy {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","import { Link, useSearchParams } from 'react-router-dom';\nimport { SortBy } from '../../types/SortBy';\n\nexport const PeopleSort = () => {\n  const [searchParams] = useSearchParams();\n  const oldSort = searchParams.get('sort');\n  const oldOrder = searchParams.get('order');\n\n  const setIconClass = (columnName: SortBy): string => {\n    if (columnName === oldSort && !oldOrder) {\n      return 'fas fa-sort-up';\n    }\n\n    if (columnName === oldSort && oldOrder) {\n      return 'fas fa-sort-down';\n    }\n\n    return 'fas fa-sort';\n  };\n\n  const addSortToUrlParams = (sort: SortBy): URLSearchParams => {\n    const params = new URLSearchParams(searchParams);\n\n    if (sort) {\n      params.set('sort', sort);\n    } else {\n      params.delete('sort');\n    }\n\n    if (sort === oldSort && !oldOrder) {\n      params.set('order', 'desc');\n    } else {\n      params.delete('order');\n    }\n\n    if (sort === oldSort && oldOrder) {\n      params.delete('sort');\n      params.delete('order');\n    }\n\n    return params;\n  };\n\n  return (\n    <tr>\n      <th>\n        <span className=\"is-flex is-flex-wrap-nowrap\">\n          Name\n          <Link\n            to={{\n              pathname: '',\n              search: addSortToUrlParams(SortBy.Name).toString(),\n            }}\n          >\n            <span className=\"icon\">\n              <i className={setIconClass(SortBy.Name)} />\n            </span>\n          </Link>\n        </span>\n      </th>\n\n      <th>\n        <span className=\"is-flex is-flex-wrap-nowrap\">\n          Sex\n          <Link\n            to={{\n              pathname: '',\n              search: addSortToUrlParams(SortBy.Sex).toString(),\n            }}\n          >\n            <span className=\"icon\">\n              <i className={setIconClass(SortBy.Sex)} />\n            </span>\n          </Link>\n        </span>\n      </th>\n\n      <th>\n        <span className=\"is-flex is-flex-wrap-nowrap\">\n          Born\n          <Link\n            to={{\n              pathname: '',\n              search: addSortToUrlParams(SortBy.Born).toString(),\n            }}\n          >\n            <span className=\"icon\">\n              <i className={setIconClass(SortBy.Born)} />\n            </span>\n          </Link>\n        </span>\n      </th>\n\n      <th>\n        <span className=\"is-flex is-flex-wrap-nowrap\">\n          Died\n          <Link\n            to={{\n              pathname: '',\n              search: addSortToUrlParams(SortBy.Died).toString(),\n            }}\n          >\n            <span className=\"icon\">\n              <i className={setIconClass(SortBy.Died)} />\n            </span>\n          </Link>\n        </span>\n      </th>\n\n      <th>Mother</th>\n      <th>Father</th>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { FEMALE } from '../../utils/constants';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === FEMALE,\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  person: Person,\n  selectedSlug: string | undefined,\n};\n\nconst NOT_SET_VALUE = '-';\n\nexport const BodyTable: React.FC<Props> = ({ person, selectedSlug }) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    mother,\n    motherName,\n    father,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      className={classNames({\n        'has-background-warning': slug === selectedSlug,\n      })}\n      data-cy=\"person\"\n    >\n      <td>\n        <PersonLink\n          person={person}\n        />\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td\n        className={classNames({\n          'has-text-danger': mother,\n        })}\n      >\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName ?? NOT_SET_VALUE\n        )}\n      </td>\n\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName ?? NOT_SET_VALUE\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { PeopleSort } from '../PeopleSort/PeopleSort';\nimport { Person } from '../../types';\nimport { BodyTable } from '../BodyTable';\n\ntype Props = {\n  people: Person[],\n  selectedSlug: string | undefined,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  selectedSlug,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <PeopleSort />\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <BodyTable\n            person={person}\n            selectedSlug={selectedSlug}\n            key={person.slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","export enum SortOrder {\n  Asc = 'asc',\n  Desc = 'desc',\n}\n","import { Person } from './types';\nimport { SortBy } from './types/SortBy';\nimport { SortOrder } from './types/SortOrder';\n\nfunction findParent(peopleList: Person[], parentName: string | null) {\n  return peopleList.find(({ name }) => name === parentName);\n}\n\nexport function getPeopleWithParents(\n  peopleList: Person[],\n) {\n  return peopleList?.map(person => ({\n    ...person,\n    mother: findParent(peopleList, person.motherName),\n    father: findParent(peopleList, person.fatherName),\n  }));\n}\n\nexport function sortPeople(\n  people: Person[],\n  oldSort?: string | null,\n  oldOrder?: string | null,\n): Person[] {\n  const humans: Person[] = [...people];\n\n  return humans.sort((humanA: Person, humanB: Person): number => {\n    if (oldSort === SortBy.Name) {\n      return oldOrder === SortOrder.Desc\n        ? (humanA.name.localeCompare(humanB.name) * -1)\n        : humanA.name.localeCompare(humanB.name);\n    }\n\n    if (oldSort === SortBy.Sex) {\n      return oldOrder === SortOrder.Desc\n        ? (humanA.sex.localeCompare(humanB.sex) * -1)\n        : humanA.sex.localeCompare(humanB.sex);\n    }\n\n    if (oldSort === SortBy.Died) {\n      return oldOrder === SortOrder.Desc\n        ? humanB.died - humanA.died\n        : humanA.died - humanB.died;\n    }\n\n    if (oldSort === SortBy.Born) {\n      return oldOrder === SortOrder.Desc\n        ? humanB.born - humanA.born\n        : humanA.born - humanB.born;\n    }\n\n    return 0;\n  });\n}\n","import { useEffect, useState } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from '../components/PeopleFilters/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../services/people';\nimport { getPeopleWithParents, sortPeople } from '../helper';\nimport { Gender } from '../types/Gender';\n\nfunction hasNormalizedQuery(content: string, query: string | null): boolean {\n  const normalizedQuery = query?.trim()?.toLowerCase() ?? '';\n\n  return content.toLowerCase().includes(normalizedQuery);\n}\n\nfunction filterByGender(person: Person, selectedGender: Gender): boolean {\n  return selectedGender === Gender.All || selectedGender === person.sex;\n}\n\nfunction filterByCentury(person: Person, centuries: string[]):boolean {\n  return !centuries?.length\n    ? true\n    : centuries.includes(Math.floor(person.born / 100).toString());\n}\n\nfunction filterPeopleByQuery(\n  people: Person[],\n  query: string | null,\n  selectedGender: Gender,\n  centuries: string[],\n) {\n  if (!query && !selectedGender && !centuries) {\n    return people;\n  }\n\n  return people.filter((person): boolean => (\n    (hasNormalizedQuery(person.name, query)\n    || hasNormalizedQuery(person.fatherName ?? '', query)\n    || hasNormalizedQuery(person.motherName ?? '', query))\n    && filterByGender(person, selectedGender)\n    && filterByCentury(person, centuries)\n  ));\n}\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMassage, setErrorMassage] = useState('');\n\n  const [searchParams] = useSearchParams();\n  const oldSort = searchParams.get('sort');\n  const oldOrder = searchParams.get('order');\n\n  const { slug: selectedSlug } = useParams();\n\n  const isShowTable = !isLoading && !!people.length;\n\n  const isPeople = !isLoading\n    && !errorMassage\n    && !people.length;\n\n  useEffect(() => {\n    setTimeout(() => {\n      getPeople()\n        .then(peopleList => {\n          setPeople(getPeopleWithParents(peopleList));\n        })\n        .catch(() => setErrorMassage('Something went wrong'))\n        .finally(() => setIsLoading(false));\n    }, 1000);\n  }, []);\n\n  const selectedGender: string = searchParams.get('sex') ?? '';\n  const query = searchParams.get('query') ?? null;\n  const centuries = searchParams.getAll('centuries') || [];\n\n  const genderEnum = Object.values(Gender).find(g => g === selectedGender)\n    ?? Gender.All;\n\n  const visiblePeople = filterPeopleByQuery(\n    people,\n    query,\n    genderEnum,\n    centuries,\n  );\n\n  const sortedPeople = sortPeople(visiblePeople, oldSort, oldOrder);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && (\n              <PeopleFilters\n                query={query}\n                centuries={centuries}\n              />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isShowTable && (\n                <PeopleTable\n                  people={sortedPeople}\n                  selectedSlug={selectedSlug}\n                />\n              )}\n\n              {isPeople\n                && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n              {!isLoading\n              && !sortedPeople.length && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n              {errorMassage && (\n                <p\n                  data-cy=\"peopleLoadingError\"\n                  className=\"has-text-danger\"\n                >\n                  {errorMassage}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function getPeople(): Promise<Person[]> {\n  return fetch(\n    'https://mate-academy.github.io/react_people-table/api/people.json',\n  )\n    .then(response => response.json())\n    .then(people => people);\n}\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={getLinkClass}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={getLinkClass}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as\n  Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { App } from './App';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"/people/:slug?\" element={<PeoplePage />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\nconst container = document.getElementById('root') as HTMLAnchorElement;\n\ncreateRoot(container)\n  .render(<Root />);\n"],"sourceRoot":""}