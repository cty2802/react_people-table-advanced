{"version":3,"sources":["pages/HomePage.tsx","utils/constants.tsx","types/Gender.ts","components/PeopleFilters/PeopleFilters.tsx","components/Loader/Loader.tsx","types/SortBy.ts","types/SortOrder.ts","helper.tsx","components/PeopleSort/PeopleSort.tsx","components/PersonLink/PersonLink.tsx","components/BodyTable/BodyTable.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","services/people.ts","components/NavBar/NavBar.tsx","App.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["HomePage","_jsx","className","children","centurySet","NORMALIZER","Gender","PeopleFilters","_ref","_searchParams$get","query","centuries","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","selectedGender","get","All","addCenturyToUrlParams","cen","params","URLSearchParams","newCenturies","includes","filter","century","concat","_toConsumableArray","delete","forEach","append","addGenderToUrlParams","gender","peopleGenders","Object","entries","_jsxs","map","_ref2","_ref3","key","value","Link","classNames","to","pathname","search","toString","type","placeholder","onChange","event","set","target","constants","currentCentury","Date","now","length","clearCenturies","Loader","SortBy","SortOrder","findParent","peopleList","parentName","find","name","setIconClass","columnName","oldSort","oldOrder","PeopleSort","addSortToUrlParams","sort","Name","Sex","Born","Died","PersonLink","person","slug","sex","BodyTable","selectedSlug","born","died","mother","motherName","father","fatherName","PeopleTable","people","hasNormalizedQuery","content","_query$trim$toLowerCa","_query$trim","normalizedQuery","trim","toLowerCase","filterPeopleByQuery","_person$fatherName","_person$motherName","filterByGender","Math","floor","filterByCentury","PeoplePage","_searchParams$get2","_Object$values$find","_useState","useState","_useState2","setPeople","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","errorMessage","setErrorMessage","useParams","isShowTable","isPeople","useEffect","setTimeout","fetch","then","response","json","_objectSpread","getPeopleWithParents","catch","finally","getAll","sortedPeople","humanA","humanB","Desc","localeCompare","sortPeople","values","g","_Fragment","getLinkClass","isActive","NavBar","role","NavLink","App","Outlet","NotFoundPage","Root","Router","Routes","Route","path","element","Navigate","replace","index","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.9f22e7c1.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const centurySet: string[] = ['16', '17', '18', '19', '20'];\n\nexport const FEMALE = 'f';\n\nexport const NORMALIZER = 100;\n","export enum Gender {\n  All = 'all',\n  Male = 'm',\n  Female = 'f',\n}\n","import { useSearchParams, Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport * as constants from '../../utils/constants';\nimport { Gender } from '../../types/Gender';\n\ntype Props = {\n  query: string | null,\n  centuries: string[] | undefined,\n};\n\nexport const PeopleFilters: React.FC<Props> = ({\n  query,\n  centuries,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const selectedGender: string = searchParams.get('sex') ?? Gender.All;\n\n  const addCenturyToUrlParams = (cen: string): URLSearchParams => {\n    const params = new URLSearchParams(searchParams);\n\n    const newCenturies = centuries?.includes(cen)\n      ? centuries.filter(century => century !== cen)\n      : [...(centuries ?? []), cen];\n\n    params.delete('centuries');\n    newCenturies.forEach(century => params.append('centuries', century));\n\n    return params;\n  };\n\n  const addGenderToUrlParams = (gender: string): URLSearchParams => {\n    const params = new URLSearchParams(searchParams);\n\n    params.delete('sex');\n    if (gender !== 'all') {\n      params.append('sex', gender);\n    }\n\n    return params;\n  };\n\n  function clearCenturies():URLSearchParams {\n    const params = new URLSearchParams(searchParams);\n\n    params.delete('centuries');\n\n    return params;\n  }\n\n  const onChangeSetQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = new URLSearchParams(searchParams);\n\n    params.set('query', event.target.value);\n    setSearchParams(params);\n  };\n\n  const peopleGenders = Object.entries(Gender);\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {peopleGenders.map(([key, value]) => (\n          <Link\n            className={classNames({ 'is-active': value !== selectedGender })}\n            to={{\n              pathname: '',\n              search: addGenderToUrlParams(value).toString(),\n            }}\n            key={key}\n          >\n            {key}\n          </Link>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query ?? ''}\n            onChange={onChangeSetQuery}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {constants.centurySet.map(currentCentury => (\n              <Link\n                key={`${Date.now()}_${currentCentury}`}\n                data-cy=\"century\"\n                className={classNames('button', 'mr-1', {\n                  'is-info': centuries?.includes(currentCentury),\n                })}\n                to={{\n                  pathname: '',\n                  search: addCenturyToUrlParams(currentCentury).toString(),\n                }}\n              >\n                {currentCentury}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={classNames('button', 'is-success',\n                { 'is-outlined': centuries?.length })}\n              to={{\n                pathname: '',\n                search: clearCenturies().toString(),\n              }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className={classNames('button', 'is-link', 'is-outlined',\n            { 'is-fullwidth': searchParams })}\n          to=\"#/people\"\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export enum SortBy {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","export enum SortOrder {\n  Asc = 'asc',\n  Desc = 'desc',\n}\n","import classNames from 'classnames';\nimport { Person } from './types';\nimport { SortBy } from './types/SortBy';\nimport { SortOrder } from './types/SortOrder';\n\nfunction findParent(peopleList: Person[], parentName: string | null) {\n  return peopleList.find(({ name }) => name === parentName);\n}\n\nexport function getPeopleWithParents(\n  peopleList: Person[],\n) {\n  return peopleList?.map(person => ({\n    ...person,\n    mother: findParent(peopleList, person.motherName),\n    father: findParent(peopleList, person.fatherName),\n  }));\n}\n\nexport function sortPeople(\n  people: Person[],\n  oldSort?: string | null,\n  oldOrder?: string | null,\n): Person[] {\n  const humans: Person[] = [...people];\n\n  return humans.sort((humanA: Person, humanB: Person): number => {\n    switch (oldSort) {\n      case SortBy.Name:\n        return oldOrder === SortOrder.Desc\n          ? (humanA.name.localeCompare(humanB.name) * -1)\n          : humanA.name.localeCompare(humanB.name);\n\n      case SortBy.Sex:\n        return oldOrder === SortOrder.Desc\n          ? (humanA.sex.localeCompare(humanB.sex) * -1)\n          : humanA.sex.localeCompare(humanB.sex);\n\n      case SortBy.Died:\n        return oldOrder === SortOrder.Desc\n          ? humanB.died - humanA.died\n          : humanA.died - humanB.died;\n\n      case SortBy.Born:\n        return oldOrder === SortOrder.Desc\n          ? humanB.born - humanA.born\n          : humanA.born - humanB.born;\n\n      default:\n        return 0;\n    }\n  });\n}\n\nexport function setIconClass(\n  columnName: SortBy,\n  oldSort: string | null,\n  oldOrder: string | null,\n): string {\n  return classNames('fas',\n    { 'fa-sort-up': columnName === oldSort && !oldOrder },\n    { 'fa-sort-down': columnName === oldSort && oldOrder },\n    { 'fa-sort': columnName });\n}\n","import { Link, useSearchParams } from 'react-router-dom';\nimport { SortBy } from '../../types/SortBy';\nimport { setIconClass } from '../../helper';\n\nexport const PeopleSort = () => {\n  const [searchParams] = useSearchParams();\n  const oldSort = searchParams.get('sort');\n  const oldOrder = searchParams.get('order');\n\n  const addSortToUrlParams = (sort: SortBy): URLSearchParams => {\n    const params = new URLSearchParams(searchParams);\n\n    if (sort) {\n      params.set('sort', sort);\n    } else {\n      params.delete('sort');\n    }\n\n    if (sort === oldSort && !oldOrder) {\n      params.set('order', 'desc');\n    } else {\n      params.delete('order');\n    }\n\n    if (sort === oldSort && oldOrder) {\n      params.delete('sort');\n      params.delete('order');\n    }\n\n    return params;\n  };\n\n  return (\n    <tr>\n      <th>\n        <span className=\"is-flex is-flex-wrap-nowrap\">\n          Name\n          <Link\n            to={{\n              pathname: '',\n              search: addSortToUrlParams(SortBy.Name).toString(),\n            }}\n          >\n            <span className=\"icon\">\n              <i className={setIconClass(SortBy.Name, oldSort, oldOrder)} />\n            </span>\n          </Link>\n        </span>\n      </th>\n\n      <th>\n        <span className=\"is-flex is-flex-wrap-nowrap\">\n          Sex\n          <Link\n            to={{\n              pathname: '',\n              search: addSortToUrlParams(SortBy.Sex).toString(),\n            }}\n          >\n            <span className=\"icon\">\n              <i className={setIconClass(SortBy.Sex, oldSort, oldOrder)} />\n            </span>\n          </Link>\n        </span>\n      </th>\n\n      <th>\n        <span className=\"is-flex is-flex-wrap-nowrap\">\n          Born\n          <Link\n            to={{\n              pathname: '',\n              search: addSortToUrlParams(SortBy.Born).toString(),\n            }}\n          >\n            <span className=\"icon\">\n              <i className={setIconClass(SortBy.Born, oldSort, oldOrder)} />\n            </span>\n          </Link>\n        </span>\n      </th>\n\n      <th>\n        <span className=\"is-flex is-flex-wrap-nowrap\">\n          Died\n          <Link\n            to={{\n              pathname: '',\n              search: addSortToUrlParams(SortBy.Died).toString(),\n            }}\n          >\n            <span className=\"icon\">\n              <i className={setIconClass(SortBy.Died, oldSort, oldOrder)} />\n            </span>\n          </Link>\n        </span>\n      </th>\n\n      <th>Mother</th>\n      <th>Father</th>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { FEMALE } from '../../utils/constants';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${person.slug}`,\n        search: searchParams.toString(),\n      }}\n      className={classNames({\n        'has-text-danger': person.sex === FEMALE,\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  person: Person,\n  selectedSlug: string | undefined,\n};\n\nconst NOT_SET_VALUE = '-';\n\nexport const BodyTable: React.FC<Props> = ({ person, selectedSlug }) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    mother,\n    motherName,\n    father,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      className={classNames({\n        'has-background-warning': slug === selectedSlug,\n      })}\n      data-cy=\"person\"\n    >\n      <td>\n        <PersonLink\n          person={person}\n        />\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td\n        className={classNames({\n          'has-text-danger': mother,\n        })}\n      >\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName ?? NOT_SET_VALUE\n        )}\n      </td>\n\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName ?? NOT_SET_VALUE\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { PeopleSort } from '../PeopleSort/PeopleSort';\nimport { Person } from '../../types';\nimport { BodyTable } from '../BodyTable';\n\ntype Props = {\n  people: Person[],\n  selectedSlug: string | undefined,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  selectedSlug,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <PeopleSort />\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <BodyTable\n            person={person}\n            selectedSlug={selectedSlug}\n            key={person.slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from '../components/PeopleFilters/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../services/people';\nimport { getPeopleWithParents, sortPeople } from '../helper';\nimport { Gender } from '../types/Gender';\nimport { NORMALIZER } from '../utils/constants';\n\nfunction hasNormalizedQuery(content: string, query: string | null): boolean {\n  const normalizedQuery = query?.trim()?.toLowerCase() ?? '';\n\n  return content.toLowerCase().includes(normalizedQuery);\n}\n\nfunction filterByGender(person: Person, selectedGender: Gender): boolean {\n  return selectedGender === Gender.All || selectedGender === person.sex;\n}\n\nfunction filterByCentury(person: Person, centuries: string[]):boolean {\n  return !centuries?.length\n    || centuries.includes(Math.floor(person.born / NORMALIZER).toString());\n}\n\nfunction filterPeopleByQuery(\n  people: Person[],\n  query: string | null,\n  selectedGender: Gender,\n  centuries: string[],\n) {\n  if (!query && !selectedGender && !centuries) {\n    return people;\n  }\n\n  return people.filter((person): boolean => (\n    (hasNormalizedQuery(person.name, query)\n    || hasNormalizedQuery(person.fatherName ?? '', query)\n    || hasNormalizedQuery(person.motherName ?? '', query))\n    && filterByGender(person, selectedGender)\n    && filterByCentury(person, centuries)\n  ));\n}\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const [searchParams] = useSearchParams();\n  const oldSort = searchParams.get('sort');\n  const oldOrder = searchParams.get('order');\n\n  const { slug: selectedSlug } = useParams();\n\n  const isShowTable = !isLoading && !!people.length;\n\n  const isPeople = !isLoading\n    && !errorMessage\n    && !people.length;\n\n  useEffect(() => {\n    setTimeout(() => {\n      getPeople()\n        .then(peopleList => {\n          setPeople(getPeopleWithParents(peopleList));\n        })\n        .catch(() => setErrorMessage('Something went wrong'))\n        .finally(() => setIsLoading(false));\n    }, 1000);\n  }, []);\n\n  const selectedGender: string = searchParams.get('sex') ?? '';\n  const query = searchParams.get('query') ?? null;\n  const centuries = searchParams.getAll('centuries') || [];\n\n  const genderEnum = Object.values(Gender).find(g => g === selectedGender)\n    ?? Gender.All;\n\n  const visiblePeople = filterPeopleByQuery(\n    people,\n    query,\n    genderEnum,\n    centuries,\n  );\n\n  const sortedPeople = sortPeople(visiblePeople, oldSort, oldOrder);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && (\n              <PeopleFilters\n                query={query}\n                centuries={centuries}\n              />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {!isLoading && !sortedPeople.length\n                ? (\n                  <p>\n                    There are no people matching the current search criteria\n                  </p>\n                )\n                : (isShowTable && (\n                  <PeopleTable\n                    people={sortedPeople}\n                    selectedSlug={selectedSlug}\n                  />\n                ))}\n\n              {isPeople\n                && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n              {errorMessage && (\n                <p\n                  data-cy=\"peopleLoadingError\"\n                  className=\"has-text-danger\"\n                >\n                  {errorMessage}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function getPeople(): Promise<Person[]> {\n  return fetch(\n    'https://mate-academy.github.io/react_people-table/api/people.json',\n  )\n    .then(response => response.json())\n    .then(people => people);\n}\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={getLinkClass}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={getLinkClass}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as\n  Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { App } from './App';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"/people/:slug?\" element={<PeoplePage />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\nconst container = document.getElementById('root') as HTMLAnchorElement;\n\ncreateRoot(container)\n  .render(<Root />);\n"],"sourceRoot":""}